---
# tasks file for ansible-role-zero-footprint-ruT-seedbox/01-common

- name: COMMON | 1.1 Upgrade all existing packages
  ansible.builtin.dnf:
    name: "*"
    state: "latest"  # noqa package-latest
  become: true
  tags:
    - common

- name: COMMON | 1.2 Set timezone
  community.general.timezone:
    name: "{{ set_timezone }}"
  become: true
  tags:
    - common

- name: COMMON | 1.3 Add two IPv4 Google DNS servers (Optional)
  community.general.nmcli:
    conn_name: "{{ ansible_default_ipv4.alias }}"
    type: "ethernet"
    dns4:
      - 8.8.8.8
      - 8.8.4.4
    state: "present"
  become: true
  when: set_google_dns
  tags:
    - common

- name: COMMON | 1.4 Add the user with a specific uid and a primary \
        group of 'wheel' (Optional)
  ansible.builtin.user:
    name: "{{ new_user }}"
    comment: "{{ new_user }}"
    uid: 1000
    group: "wheel"
  when: create_new_user
  tags:
    - common

- name: COMMON | 1.5 Create a directory structure
  ansible.builtin.file:
    path: "/home/{{ ansible_user }}/{{ item }}"
    state: "directory"
    mode: "0777"
  loop:
    - ".Session"
    - "site"
    - "site/.WatchAPPZ"
    - "site/.WatchGAMES"
    - "site/.WatchMISC"
    - "site/.WatchMP3"
    - "site/.WatchTV-HD"
    - "site/.WatchTV-SD"
    - "site/.WatchMOVIES-HD"
    - "site/.WatchMOVIES-SD"
    - "site/.WatchXXX"
    - "site/APPZ"
    - "site/GAMES"
    - "site/MISC"
    - "site/MP3"
    - "site/TV-HD"
    - "site/TV-SD"
    - "site/MOVIES-HD"
    - "site/MOVIES-SD"
    - "site/XXX"
    - "site/UPLOAD"
  tags:
    - common

- name: COMMON | 1.6 Change home folder permissions
  ansible.builtin.file:
    path: "/home/{{ ansible_user }}"
    mode: "0711"
  tags:
    - common

- name: COMMON | 1.7 Remove unnecessary messages of the day
  ansible.builtin.file:
    path: "/etc/motd.d/{{ item }}"
    state: "absent"
  become: true
  loop:
    - "cockpit"
    - "insights-client"
  tags:
    - common

- name: COMMON | 1.8 Add cleanup cron for Torrent files
  ansible.builtin.cron:
    name: "Remove *.torrent files older than 120 days every 1st \
          day of the month (at 12:00AM)"
    day: "1"
    minute: "0"
    hour: "0"
    job: "find /home/{{ ansible_user }}/site/.Watch*/*.torrent \
          -type f -ctime +120 -delete"
    backup: true
  tags:
    - common

- name: COMMON | 1.9 Add cleanup cron for the Torrent data
  ansible.builtin.cron:
    name: "Remove site sub-folders older than 120 days every 1st \
          day of the month (at 12:02AM)"
    day: "1"
    minute: "2"
    hour: "0"
    job: "find /home/{{ ansible_user }}/site/ -maxdepth 2 -mindepth \
          2 -type d -ctime +120 -exec rm -rf \"{}\" +"
  tags:
    - common

- name: COMMON | 1.10 Add useful alias rt
  ansible.builtin.lineinfile:
    path: "~/.bashrc"
    line: "alias rt=\"tmux a\""
    create: true
    mode: "0644"
  tags:
    - common

- name: COMMON | 1.11 Add Autobrr service
  ansible.builtin.template:
    src: "autobrr/autobrr.service.j2"
    dest: "/etc/systemd/system/autobrr@.service"
    backup: false
    mode: "0644"
  become: true
  tags:
    - common

- name: COMMON | 1.12 Add Autobrr config directory
  ansible.builtin.file:
    path: "/home/{{ ansible_user }}/.config/autobrr/"
    state: "directory"
    mode: "0755"
  tags:
    - common

- name: COMMON | 1.13 Generate session secret for Autobrr
  ansible.builtin.shell:
    cmd: "set -o pipefail && head /dev/urandom | tr -dc A-Za-z0-9 | head -c32"
    executable: "/bin/bash"
  changed_when: true
  register: session_secret
  tags:
    - common

- name: COMMON | 1.14 Add Autobrr configuration file
  ansible.builtin.template:
    src: "autobrr/config.toml.j2"
    dest: "/home/{{ ansible_user }}/.config/autobrr/config.toml"
    mode: "0644"
  tags:
    - common

- name: COMMON | 1.15 Add required package tar
  ansible.builtin.dnf:
    name: "tar"
    state: present
  become: true
  tags:
    - common

- name: COMMON | 1.16 Unarchive Autobrr
  ansible.builtin.unarchive:
    src: "https://github.com/autobrr/autobrr/releases/download/\
          v{{ autobrr_ver }}/autobrr_{{ autobrr_ver }}_\
          linux_x86_64.tar.gz"
    dest: "/home/{{ ansible_user }}"
    remote_src: true
  tags:
    - common

- name: COMMON | 1.17 Unarchive Sizechecker
  ansible.builtin.unarchive:
    src: "https://github.com/s0up4200/sizechecker/releases/download/\
          v{{ sizechecker_ver }}/sizechecker_{{ sizechecker_ver }}_\
          linux_amd64.tar.gz"
    dest: "/home/{{ ansible_user }}"
    remote_src: true
  tags:
    - common

- name: COMMON | 1.18 Install Autobrr & Sizechecker binaries
  ansible.builtin.command: "mv -v /home/{{ ansible_user }}/autobrr /home/\
                            {{ ansible_user }}/autobrrctl \
                            /home/{{ ansible_user }}/sizechecker \
                            /usr/local/bin/"
  args:
    creates: "/usr/local/bin/autobrr"
  become: true
  tags:
    - common

- name: COMMON | 1.19 Add required package policycoreutils-python-utils
  ansible.builtin.dnf:
    name: "policycoreutils-python-utils"
    state: present
  become: true
  tags:
    - common

- name: COMMON | 1.20 Restore Autobrr & Sizechecker files default SELinux \
        security contexts
  ansible.builtin.command: "restorecon -Rv /usr/local/bin/"
  register: restorecon_usr_local_bin
  changed_when: "'Relabeled' in restorecon_usr_local_bin.stdout"
  become: true
  tags:
    - common

- name: COMMON | 1.21 Ensure port 7474 is labeled with http_port_t for Autobrr
  community.general.seport:
    ports: "7474"
    proto: "tcp"
    setype: "http_port_t"
    state: present
  become: true
  tags:
    - common

- name: COMMON | 1.22 Add Autobrr backup & upgrade shell script
  ansible.builtin.template:
    src: "autobrr/upgrade_autobrr.sh.j2"
    dest: "/home/{{ ansible_user }}/upgrade_autobrr.sh"
    mode: "0755"
  tags:
    - common

- name: COMMON | 1.23 Add panic shell script
  ansible.builtin.template:
    src: "common/panic.sh.j2"
    dest: "/usr/local/bin/panic.sh"
    mode: "0755"
  become: true
  tags:
    - common

- name: COMMON | 1.24 Systemd wide DefaultLimitNOFILE
  ansible.builtin.lineinfile:
    path: "/etc/systemd/system.conf"
    regexp: '^#DefaultLimitNOFILE=.*'
    line: "DefaultLimitNOFILE={{ maximum_number_of_open_file_descriptors }}"
  become: true
  tags:
    - common

- name: COMMON | 1.25 Set soft nofile limit
  ansible.builtin.lineinfile:
    path: "/etc/security/limits.conf"
    line: "* soft nofile \
          {{ maximum_number_of_open_file_descriptors }}"
    insertbefore: '^# End of file$'
  become: true
  tags:
    - common

- name: COMMON | 1.26 Set hard nofile limit
  ansible.builtin.lineinfile:
    path: "/etc/security/limits.conf"
    line: "* hard nofile \
          {{ maximum_number_of_open_file_descriptors }}"
    insertbefore: '^# End of file$'
  become: true
  tags:
    - common

- name: COMMON | 1.27 Include sysctl vars
  ansible.builtin.include_vars: vars/sysctl.yml
  when: sysctl_tunables
  tags:
    - common

- name: COMMON | 1.28 Set various sysctl settings
  ansible.posix.sysctl:
    name: "{{ item.key }}"
    value: "{{ item.value }}"
    sysctl_set: true
    reload: false
    state: present
  loop: "{{ sysctl_settings | dict2items }}"
  become: true
  when: sysctl_tunables
  tags:
    - common

- name: COMMON | 1.29 Reload sysctl
  ansible.builtin.command: "sysctl -p"
  changed_when: true
  become: true
  tags:
    - common
