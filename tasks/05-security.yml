---
# tasks file for ansible-role-zero-footprint-ruT-seedbox
- name: SECURITY | Install packages
  ansible.builtin.dnf:
    name: "{{ item }}"
    state: present
  become: true
  loop:
    - firewalld
    - fail2ban
    - policycoreutils-devel
  tags:
    - security

- name: SECURITY | Ensure SELinux is set to enforcing mode
  ansible.builtin.lineinfile:
    path: /etc/selinux/config
    regexp: '^SELINUX='
    line: SELINUX=enforcing
  become: true
  tags:
    - security

- name: SECURITY | Copy the SELinux modules
  ansible.builtin.copy:
    src: selinux/{{ item }}
    dest: /tmp/{{ item }}
  loop:
    - rutorrent.te
    - tmux.te
  tags:
    - security

- name: SECURITY | Compile the SELinux modules
  ansible.builtin.command: "make -f /usr/share/selinux/devel/Makefile {{ item | split(\".\") | first }}.pp"
  args:
    chdir: "/tmp"
  loop:
    - rutorrent.te
    - tmux.te
  tags:
    - security

- name: SECURITY | Install the SELinux modules
  ansible.builtin.command: "semodule -i {{ item }}"
  args:
    chdir: "/tmp"
  become: true
  loop:
    - rutorrent.pp
    - tmux.pp
  tags:
    - security

- name: SECURITY | Start service firewalld
  ansible.builtin.service:
    name: firewalld
    state: started
    enabled: true
  become: true
  tags:
    - security

- name: SECURITY | Permit traffic in default zone for https, ssh services
  ansible.posix.firewalld:
    service: "{{ item }}"
    permanent: true
    immediate: true
    state: enabled
  become: true
  loop:
    - ssh
    - http
  tags:
    - security

- name: SECURITY | Permit traffic in default zone for various ports
  ansible.posix.firewalld:
    port: "{{ item }}"
    permanent: true
    immediate: true
    state: enabled
  become: true
  loop:
    - "{{ rtorrent_port }}/tcp"
    - "{{ rtorrent_port }}/udp"
    - "{{ ftp_port }}/tcp"
    - "{{ pasv_port_range }}/tcp"
    - "{{ pasv_port_range }}/udp"
    - "7474/tcp"
  tags:
    - security

- name: SECURITY | Deny traffic in default zone for cockpit
  ansible.posix.firewalld:
    service: "cockpit"
    permanent: true
    immediate: true
    state: disabled
  become: true
  notify:
    - "Reload firewalld"
  tags:
    - security

- name: SECURITY | Reload service firewalld
  ansible.builtin.service:
    name: firewalld
    state: reloaded
    enabled: true
  become: true
  tags:
    - security

- name: SECURITY | Template the configuration for SSHD
  ansible.builtin.template:
    src: sshd/sshd_config.j2
    dest: /etc/ssh/sshd_config
    backup: true
  become: true
  tags:
    - security

- name: SECURITY | Copy the configuration for Fail2Ban (jail)
  ansible.builtin.copy:
    src: fail2ban/jail.local
    dest: /etc/fail2ban/jail.local
    backup: true
  become: true
  tags:
    - security

- name: SECURITY | Copy the configuration for Fail2Ban (lighttpd)
  ansible.builtin.copy:
    src: fail2ban/lighttpd.local
    dest: /etc/fail2ban/jail.d/lighttpd.local
    backup: true
  become: true
  tags:
    - security

- name: SECURITY | Copy the configuration for Fail2Ban (sshd)
  ansible.builtin.copy:
    src: fail2ban/sshd.local
    dest: /etc/fail2ban/jail.d/sshd.local
    backup: true
  become: true
  tags:
    - security

- name: SECURITY | Copy the configuration for Fail2Ban (vsftpd)
  ansible.builtin.copy:
    src: fail2ban/vsftpd.local
    dest: /etc/fail2ban/jail.d/vsftpd.local
    backup: true
  become: true
  tags:
    - security

- name: SECURITY | Make exceptions for some IP addresses for Fail2Ban
  ansible.builtin.lineinfile:
    path: /etc/fail2ban/jail.conf
    regexp: '^#ignoreip = 127.0.0.1/8 ::1$'
    line: "ignoreip = 127.0.0.1/8 ::1 192.168.0.1/16 10.0.0.0/8 172.16.0.0/12 {{ fail2ban_ignore_ipv4 }}"
    backup: true
  become: true
  tags:
    - security

- name: SECURITY | Disable shell history
  ansible.builtin.lineinfile:
    path: /etc/profile
    regexp: '^HISTSIZE=1000$'
    line: "HISTSIZE=0\nHISTFILE=/dev/null"
    backup: true
  become: true
  tags:
    - security
