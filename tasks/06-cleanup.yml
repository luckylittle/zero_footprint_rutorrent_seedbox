---
# tasks file for ansible-role-zero-footprint-ruT-seedbox/06-cleanup
- name: CLEANUP | 6.1 Remove unnecessary packages
  ansible.builtin.dnf:
    name: "{{ item }}"
    state: absent
  become: true
  loop:
    - "audit"
    - "cockpit"
    - "gcc"
    - "gcc-c++"
    - "insights-client"
    - "libcurl-devel"
    - "make"
    - "ncurses-devel"
    - "openssl-devel"
    - "policycoreutils-devel"
    - "python3-cryptography"
    - "python3-passlib"
    - "rsyslog"
    - "zlib-devel"
  tags:
    - cleanup

- name: CLEANUP | 6.2 Remove unnecessary source files
  ansible.builtin.file:
    path: "/home/{{ ansible_user }}/{{ item }}"
    state: "absent"
  become: true
  loop:
    - "{{ libtorrent_dl | urlsplit('path') | basename \
      | regex_replace('.tar.gz') }}"
    - "{{ rtorrent_dl | urlsplit('path') | basename | \
      regex_replace('.tar.gz') }}"
  tags:
    - cleanup

- name: CLEANUP | 6.3 Remove unnecessary SELinux files
  ansible.builtin.file:
    path: "/tmp/{{ item }}"
    state: "absent"
  loop:
    - "rutorrent.fc"
    - "rutorrent.if"
    - "rutorrent.pp"
    - "rutorrent.te"
    - "tmux.fc"
    - "tmux.if"
    - "tmux.pp"
    - "tmux.te"
  tags:
    - cleanup

- name: CLEANUP | 6.4 Remove unnecessary .github folder from ruTorrent
  ansible.builtin.file:
    path: "/var/www/ruTorrent/.github"
    state: "absent"
  tags:
    - cleanup

- name: CLEANUP | 6.5 Remove unnecessary Autobrr files
  ansible.builtin.file:
    path: "/home/{{ ansible_user }}/{{ item }}"
    state: "absent"
  loop:
    - "autobrr_{{ autobrr_version }}_linux_x86_64.tar.gz"
    - "LICENSE"
    - "README.md"
  tags:
    - cleanup

- name: CLEANUP | 6.6 Clean DNF cache
  ansible.builtin.command: "dnf clean all"
  register: dnf_clean_all
  changed_when: "'files removed' in dnf_clean_all.stdout"
  become: true
  tags:
    - cleanup

- name: CLEANUP | 6.7 Change journald storage to RAM
  ansible.builtin.lineinfile:
    path: "/etc/systemd/journald.conf"
    regexp: '^#Storage=.*'
    line: "Storage=volatile"
  notify:
    - "Restart journal"
  become: true
  tags:
    - cleanup

- name: CLEANUP | 6.8 Ensure rhsm logging is disabled
  community.general.ini_file:
    path: "/etc/rhsm/rhsm.conf"
    section: "rhsmcertd"
    option: "disable"
    value: 1
    backup: true
    mode: "0644"
  become: true
  tags:
    - cleanup

- name: CLEANUP | 6.9 Ensure rhsm logging is only ERROR
  community.general.ini_file:
    path: "/etc/rhsm/rhsm.conf"
    section: "logging"
    option: "default_log_level"
    value: "ERROR"
    mode: "0644"
  become: true
  tags:
    - cleanup

- name: CLEANUP | 6.10 Disable DNF logging
  ansible.builtin.lineinfile:
    path: "/etc/dnf/dnf.conf"
    line: "logfilelevel=0"
    create: true
    backup: true
    mode: "0644"
  become: true
  tags:
    - cleanup

- name: CLEANUP | 6.11 Minimise general logrotate to daily
  ansible.builtin.lineinfile:
    path: "/etc/logrotate.conf"
    regexp: '^weekly$'
    line: "daily"
    backup: true
  become: true
  tags:
    - cleanup

- name: CLEANUP | 6.12 Minimise general logrotate to 1
  ansible.builtin.lineinfile:
    path: "/etc/logrotate.conf"
    regexp: '^rotate 4$'
    line: "rotate 1"
  become: true
  tags:
    - cleanup

- name: CLEANUP | 6.13 Check if bootlog logrotate config exists
  ansible.builtin.stat:
    path: "/etc/logrotate.d/bootlog"
  register: bootlog_file
  tags:
    - cleanup

- name: CLEANUP | 6.14 Minimise bootlog logrotate to 1
  ansible.builtin.lineinfile:
    path: "/etc/logrotate.d/bootlog"
    regexp: '^    rotate 7$'
    line: "    rotate 1"
  become: true
  when: bootlog_file.stat.exists
  tags:
    - cleanup

- name: CLEANUP | 6.15 Minimise btmp logrotate to daily
  ansible.builtin.lineinfile:
    path: "/etc/logrotate.d/btmp"
    regexp: '^    monthly$'
    line: "    daily"
  become: true
  tags:
    - cleanup

- name: CLEANUP | 6.16 Minimise dnf logrotate to daily
  ansible.builtin.lineinfile:
    path: "/etc/logrotate.d/dnf"
    regexp: '^    weekly$'
    line: "    daily"
  become: true
  tags:
    - cleanup

- name: CLEANUP | 6.17 Minimise dnf logrotate to 1
  ansible.builtin.lineinfile:
    path: "/etc/logrotate.d/dnf"
    regexp: '^    rotate 4$'
    line: "    rotate 1"
  become: true
  tags:
    - cleanup

- name: CLEANUP | 6.18 Minimise firewalld logrotate to daily
  ansible.builtin.lineinfile:
    path: "/etc/logrotate.d/firewalld"
    regexp: '^    weekly$'
    line: "    daily"
  become: true
  tags:
    - cleanup

- name: CLEANUP | 6.19 Minimise firewalld logrotate to 1
  ansible.builtin.lineinfile:
    path: "/etc/logrotate.d/firewalld"
    regexp: '^    rotate 4$'
    line: "    rotate 1"
  become: true
  tags:
    - cleanup

- name: CLEANUP | 6.20 Check if iscsiuiolog logrotate config exists
  ansible.builtin.stat:
    path: "/etc/logrotate.d/iscsiuiolog"
  register: iscsiuiolog_file
  tags:
    - cleanup

- name: CLEANUP | 6.21 Minimise iscsiuiolog logrotate to daily
  ansible.builtin.lineinfile:
    path: "/etc/logrotate.d/iscsiuiolog"
    regexp: '^    weekly$'
    line: "    daily"
  become: true
  when: iscsiuiolog_file.stat.exists
  tags:
    - cleanup

- name: CLEANUP | 6.22 Minimise iscsiuiolog logrotate to 1
  ansible.builtin.lineinfile:
    path: "/etc/logrotate.d/iscsiuiolog"
    regexp: '^    rotate 4$'
    line: "    rotate 1"
  become: true
  when: iscsiuiolog_file.stat.exists
  tags:
    - cleanup

- name: CLEANUP | 6.23 Check if psacct logrotate config exists
  ansible.builtin.stat:
    path: "/etc/logrotate.d/psacct"
  register: psacct_file
  tags:
    - cleanup

- name: CLEANUP | 6.24 Minimise psacct logrotate to 1
  ansible.builtin.lineinfile:
    path: "/etc/logrotate.d/psacct"
    regexp: '^    rotate 31$'
    line: "    rotate 1"
  become: true
  when: psacct_file.stat.exists
  tags:
    - cleanup

- name: CLEANUP | 6.25 Check if psacct logrotate config exists
  ansible.builtin.stat:
    path: "/etc/logrotate.d/samba"
  register: samba_file
  tags:
    - cleanup

- name: CLEANUP | 6.26 Minimise samba logrotate to 1
  ansible.builtin.lineinfile:
    path: "/etc/logrotate.d/samba"
    regexp: '^    rotate 99$'
    line: "    rotate 1"
  become: true
  when: samba_file.stat.exists
  tags:
    - cleanup

- name: CLEANUP | 6.27 Minimise sssd logrotate to daily
  ansible.builtin.lineinfile:
    path: "/etc/logrotate.d/sssd"
    regexp: '^    weekly$'
    line: "    daily"
  become: true
  tags:
    - cleanup

- name: CLEANUP | 6.28 Minimise sssd logrotate to 1
  ansible.builtin.lineinfile:
    path: "/etc/logrotate.d/sssd"
    regexp: '^    rotate 2$'
    line: "    rotate 1"
  become: true
  tags:
    - cleanup

- name: CLEANUP | 6.29 Minimise wtmp logrotate to daily
  ansible.builtin.lineinfile:
    path: "/etc/logrotate.d/wtmp"
    regexp: '^    monthly$'
    line: "    daily"
  become: true
  tags:
    - cleanup

- name: CLEANUP | 6.30 Find all logs in /var/log
  ansible.builtin.find:
    paths: "/var/log"
    recurse: true
    file_type: "file"
  become: true
  register: var_log_files
  tags:
    - cleanup

- name: CLEANUP | 6.31 Remove all var_log_files
  ansible.builtin.file:
    path: "{{ item.path }}"
    state: "absent"
  become: true
  loop: "{{ var_log_files.files }}"
  tags:
    - cleanup

- name: CLEANUP | 6.32 Create a symbolic link pointing to \
        /dev/null for all remaining logs
  ansible.builtin.file:
    src: "/dev/null"
    dest: "{{ item }}"
    state: "link"
  become: true
  loop:
    - "/var/log/btmp"
    - "/var/log/dnf.librepo.log"
    - "/var/log/dnf.log"
    - "/var/log/dnf.rpm.log"
    - "/var/log/firewalld"
    - "/var/log/hawkey.log"
    - "/var/log/lastlog"
    - "/var/log/rhsm/rhsm.log"
    - "/var/log/tallylog"
    - "/var/log/tuned/tuned.log"
    - "/var/log/wtmp"
  tags:
    - cleanup

- name: CLEANUP | 6.33 Remove all remaining packages that are not being used
  ansible.builtin.command: "dnf autoremove -y"
  register: dnf_autoremove
  changed_when: "'Complete!' in dnf_autoremove.stdout"
  become: true
  tags:
    - cleanup
