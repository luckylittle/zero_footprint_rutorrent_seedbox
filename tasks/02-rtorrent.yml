---
# tasks file for ansible-role-zero-footprint-ruT-seedbox/02-rtorrent

- name: RTORRENT | 2.1 Install required packages
  ansible.builtin.dnf:
    name: "{{ item }}"
    state: present
    disable_gpg_check: true
  become: true
  loop:
    - "{{ epel_dl }}"
    - "gcc"
    - "gcc-c++"
    - "libcurl-devel"
    - "make"
    - "ncurses-devel"
    - "openssl-devel"
    - "tmux"
    - "wget"
    - "zlib-devel"
  tags:
    - rtorrent

- name: RTORRENT | 2.2 Untar the libtorrent & rtorrent sources
  ansible.builtin.unarchive:
    src: "{{ item }}"
    dest: "~"
    remote_src: true
  loop:
    - "{{ libtorrent_dl }}"
    - "{{ rtorrent_dl }}"
  tags:
    - rtorrent

- name: RTORRENT | 2.3 Compile libtorrent - configure
  ansible.builtin.command: "./configure"
  args:
    chdir: "~/{{ libtorrent_dl | urlsplit('path') | \
            basename | regex_replace('.tar.gz') }}"
    creates: "~/{{ libtorrent_dl | urlsplit('path') | \
              basename | regex_replace('.tar.gz') }}\
              /config.status"
  tags:
    - rtorrent

- name: RTORRENT | 2.4 Compile libtorrent - make
  ansible.builtin.command: "make"
  args:
    chdir: "~/{{ libtorrent_dl | urlsplit('path') | \
            basename | regex_replace('.tar.gz') }}"
    creates: "~/{{ libtorrent_dl | urlsplit('path') | \
              basename | regex_replace('.tar.gz') }}\
              /src/.libs"
  tags:
    - rtorrent

- name: RTORRENT | 2.5 Compile libtorrent - make install
  ansible.builtin.command: "make install"
  args:
    chdir: "/home/{{ ansible_user }}/{{ libtorrent_dl | \
            urlsplit('path') | basename | regex_replace('.tar.gz') }}"
    creates: "/usr/local/lib/libtorrent.la"
  become: true
  tags:
    - rtorrent

- name: RTORRENT | 2.6 Compile rtorrent - configure
  ansible.builtin.command: "./configure --with-xmlrpc-tinyxml2"
  environment:
    PKG_CONFIG_PATH: /usr/local/lib/pkgconfig
  args:
    chdir: "~/{{ rtorrent_dl | urlsplit('path') | \
            basename | regex_replace('.tar.gz') }}"
    creates: "~/{{ rtorrent_dl | urlsplit('path') | \
              basename | regex_replace('.tar.gz') }}\
              /config.status"
  tags:
    - rtorrent

- name: RTORRENT | 2.7 Compile rtorrent - make
  ansible.builtin.command: "make"
  args:
    chdir: "~/{{ rtorrent_dl | urlsplit('path') | \
            basename | regex_replace('.tar.gz') }}"
    creates: "~/{{ rtorrent_dl | urlsplit('path') | \
              basename | regex_replace('.tar.gz') }}\
              /src/.libs"
  tags:
    - rtorrent

- name: RTORRENT | 2.8 Compile rtorrent - make install
  ansible.builtin.command: "make install"
  args:
    chdir: "/home/{{ ansible_user }}/{{ rtorrent_dl | \
            urlsplit('path') | basename | regex_replace('.tar.gz') }}"
    creates: "/usr/local/bin/rtorrent"
  become: true
  tags:
    - rtorrent

- name: RTORRENT | 2.9 Template the configuration for rtorrent
  ansible.builtin.template:
    src: "rtorrent/rtorrent.rc.j2"
    dest: "~/.rtorrent.rc"
    backup: true
    mode: "0644"
  tags:
    - rtorrent

- name: RTORRENT | 2.10 Template a service file for rtorrent
  ansible.builtin.template:
    backup: true
    src: "rtorrent/rtorrent.service.j2"
    dest: "/etc/systemd/system/rtorrent.service"
    mode: "0644"
  become: true
  tags:
    - rtorrent
